@import 'set_fonts_object';

                    
// Set font-size for each device from $fonts to @media selectors
//
// settings:
$settings_font_size_pro: (
    round_values: 0, // [0, 1], boolean
);
//

 @debug "$fonts before font_size_pro !!!!!:";  
 @debug $fonts;  


@mixin font_size_pro ($type) {

    $curr_font_size : 0;
    $prev_font_size : 0;

    @each $fonts_device, $fonts_obj in $fonts {

        $curr_font_size: map-get($fonts_obj, $type);
        // @debug "curr_font_size_ : #{$curr_font_size}";
        // @debug "prev_font_size : #{$prev_font_size}";


        @if ( $curr_font_size != $prev_font_size ) {

            $prev_font_size: $curr_font_size;

            // @media (min-width: #{map-get($devices, $fonts_device)}px) {                
            @media (min-width: #{  bp($fonts_device) }px) {                

                $font_size: map-get($fonts_obj, $type);

                @if  map-get($settings_font_size_pro, round_values) == 1  {
                    // font-size:   round($font_size) ;
                    font-size:   #{round($font_size)}px;
                } @else {
                    // font-size: $font_size;
                    // font-size: $font_size+'px'; // -
                    font-size: #{$font_size}px; 
                }

            }

        } // @if

        // @debug "__ start next iteration";     
    } // @each

}
